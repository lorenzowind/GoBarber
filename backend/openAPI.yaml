openapi: 3.0.0

info:
  title: GoBarber API
  description: HTTP Requests guide to utilize the GoBarber API.
  version: 0.0.1

servers:
  - url: http://localhost:3333
    description: Development server URL

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: JWT token is missing
    IncorrectToken:
      description: Invalid JWT token
  schemas:
    User:
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
        password:
          type: string
        avatar:
          type: string
          format: binary
        created_at:
          type: string
          format: dateformat
        updated_at:
          type: string
          format: dateformat
        avatar_url:
          type: string
          format: url

paths:
  /users:
    post:
      summary: Creates an user.
      requestBody:
        required: true
        content:
          application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: User Name
                  email:
                    type: string
                    format: email
                    example: user@email.com
                  password:
                    type: string
                    example: user password
      responses:
        '200':
          description: Returns a JSON containing the created user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 3c68c90a-009b-4c59-9c7f-dab2774e9a57
                  name:
                    type: string
                    example: User Name
                  email:
                    type: string
                    format: email
                    example: user@email.com
                  created_at:
                    type: string
                    format: dateformat
                    example: 2020-07-02T21:57:00.421Z
                  updated_at:
                    type: string
                    format: dateformat
                    example: 2020-07-02T21:57:00.421Z
                  avatar_url:
                    type: string
                    example: null
  /users/avatar:
    patch:
      summary: Updates the user avatar.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
      responses:
        '200':
          description: Returns a JSON containing the updated user with avatar data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 3c68c90a-009b-4c59-9c7f-dab2774e9a57
                  name:
                    type: string
                    example: User Name
                  email:
                    type: string
                    format: email
                    example: user@email.com
                  avatar:
                    type: string
                    format: binary
                    example: 2196cf1aec2f18533aaf-file_name.png
                  created_at:
                    type: string
                    format: dateformat
                    example: 2020-07-02T21:57:00.421Z
                  updated_at:
                    type: string
                    format: dateformat
                    example: 2020-07-02T21:57:00.421Z
                  avatar_url:
                    type: string
                    example: https://image_upload_provider/2196cf1aec2f18533aaf-file_name.png
        '400':
          $ref:  '#/components/responses/IncorrectToken'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
